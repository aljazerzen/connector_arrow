---
name: Test
on:
  push:
    branches: [main, ci]
  pull_request:
    branches: [main]
jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      # checkout and env setup
      - uses: actions/checkout@v3
      - uses: nixbuild/nix-quick-install-action@v30
      - uses: nix-community/cache-nix-action@v6
        with:
          primary-key: build-${{ runner.os }}-${{hashFiles('flake.nix', 'flake.lock')}}
          paths: |
            ~/.npm
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: build-${{ runner.os }}-
          # created more than 0 seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
          # and collect garbage in the Nix store until it reaches this size in bytes
          gc-max-store-size: 0
      - name: Build the nix shell
        run: nix develop --command just --version
      - uses: Swatinem/rust-cache@v2

      # setup databases
      - name: Start databases
        run: nix develop --command just dbs/start

      # run tests
      - name: Run tests
        run: nix develop --command just test
